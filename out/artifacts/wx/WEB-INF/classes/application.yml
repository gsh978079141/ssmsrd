server:
  servlet:
    context-path: /ssmsrd
    session:
      timeout: 60000
#****数据库配置*****#
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/jxxkhotel?characterEncoding=UTF-8
    username: root
    password: 123
    #Druid连接池配置
    driverClassName: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
  #    　　下面为连接池的补充设置，应用到上面所有数据源中
  #    　　初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
  #    　　配置获取连接等待超时的时间
    maxWait: 60000
  #    　　配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
  #    　　配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
  #    　　打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
  #    　　配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
   # filters: stat,wall,slf4j
  #    　　通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  #       合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  #测试redis
    tomcat:
      test-on-borrow: false
      test-on-return: false
  #测试redis
  #*****Spring MVC配置*****#
  mvc:
    view:
      prefix: /WEB-INF/
      suffix: .jsp
#    static-path-pattern: /static/
#SpringBoot 自定义静态资源配置
  resources:
    static-locations: classpath:/static/
#Redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    timeout: 1000
    jedis:
      pool:
        max-wait: -1
        max-idle: 8
        min-idle: 0
        max-active: 8
        isRedisCache: 1  #是否使用redis缓存

#Spring-session 方法 S  未验证
#  session:
#    store-type: redis
#    redis:
#      flush-mode: immediate
#      namespace: myredis
#Spring-session 方法 S
#****Mybatis-plus配置*****#
mybatis:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  #mapper-locations: classpath:com/gsh/ssmsrd/dao/mapper/*.xml     #***.xml文件所在路径
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.gsh.ssmsrd.model                        #别名包路径
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    #配置JdbcTypeForNull
    jdbc-type-for-null: 'null'
  type-handlers-package: org.mybatis.example.ExampleTypeHandler
#*****日志配置*****#
logging:
  level.root: info
  level.com.gsh: debug
  path: logs/

#****热加载配置*****#
#    devtools:
#      restart:
#        enabled: false
#    profiles:
#      active: dev